#!/bin/bash -i

### BEGIN INIT INFO
# Provides:          razor-server
# Required-Start:    $network $remote_fs $syslog $apache2 $time
# Required-Stop:     $time
# Default-Start:     2 3 4 5 S
# Default-Stop:      0 1 6
# Short-Description: razor-server
# Description:       razor-server torquebox
### END INIT INFO

FORCE="$FORCE"
DEBUG="$DEBUG"

[[ $DEBUG ]] && set -xv
set -eu

DIR=$( cd "${BASH_SOURCE[0]%/*}" && pwd )
SCRIPT="$DIR/${BASH_SOURCE[0]}"

RAZOR_ROOT="/usr/src/razor-server-0.15.0"
DESC="${RAZOR_ROOT%/}"
DESC="${RAZOR_ROOT##*/}"

INIT_FUNC_FILE='/lib/lsb/init-functions'
# [ -f $INIT_FUNC_FILE ] && . $INIT_FUNC_FILE

DEFAULTFILE="/etc/default/$DESC"
[[ -f $DEFAULTFILE ]] && source $DEFAULTFILE

PIDFILE="/var/run/torquebox-$DESC.pid"
LOGFILE="/var/log/torquebox/$DESC.log"
export TORQUEBOXOPTS='run --bind-address 0.0.0.0'
export JAVA_OPTS="-Xms128m -Xmx1024m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true"

mkdir -p "${LOGFILE%/*}"

source ~/.profile
jruby=$(grep -i jruby $RAZOR_ROOT/Gemfile | \
  sed -r 's/, +/\n/g' | \
  awk -F "'" '/engine_version/{print $2}')
eval "$(rbenv init -)"
rbenv rehash && rbenv global "jruby-$jruby"

export PATH="$(rbenv which jruby)/bin/jruby:$PATH"

echo "jruby is $jruby" >&2

which_torquebox() {
  export RBENV_ROOT="/usr/src/rbenv"

  [[ -d "${RBENV_ROOT}" ]] && export PATH="${RBENV_ROOT}/bin:${PATH}"

  rbenv which torquebox
}

start() {
  TORQUEBOX=$(which_torquebox)

  if JAVA_OPTS="$JAVA_OPTS" start-stop-daemon \
      --start                                 \
      --pidfile "$PIDFILE"                    \
      --make-pidfile                          \
      --background --no-close                 \
      --exec "$TORQUEBOX"                     \
      -- $TORQUEBOXOPTS >> "$LOGFILE" 2>&1 ; then
    echo "torquebox ($DESC) started successfully" >&2
    return 0
  else
    echo "torquebox ($DESC) not started."
    return 1
  fi
}

stop () {
  pids=()
  if [[ -f $PIDFILE ]]; then
    pid=$(< "$PIDFILE" )
    kill -0 "$pid" &>/dev/null && pids+=( "$pid" )
  fi

  pid=$(netstat -antp | awk -F '[ /]+' '$4 ~ /0.0.0.0:8080/{print $7}')
  if [[ $pid ]] && kill -0 "$pid"; then
    pids+=( "$pid" )
  fi

  if (( ${#pids[@]} < 1 )); then
    echo "No razor/torquebox processes found." >&2
    return 1
  fi

  for pid in "${pids[@]}"; do
    pstree -p "$pid" | grep -Eio '[0-9]+' | while read pid; do
      if kill "$pid"; then
        echo "pid $pid killed successfully." >&2
      else
        echo "pid $pid not killed." >&2
        return 1
      fi
    done
  done

  return 0
}

status() {
  if [[ -f "$PIDFILE" ]]; then
    pid=$(< "$PIDFILE")
    if kill -0 "$pid" &>/dev/null; then
      echo "pid $pid (torquebox) is running." >&2
      return 0
    fi
  fi

  echo "torquebox ($DESC) not registered/started." >&2
  [[ $PIDFILE ]] && rm -f "$PIDFILE"
  return 1
}

restart() {
  stop;
  start;
}

which() {
  ( set -xv
    { (set +xv; which_torquebox;)
      rbenv versions --list
      jruby -v
      ruby -v
    } >&2
  )
  exit 0
}

cmd="$1"
shift;

ret=$( "$cmd" "$@" )
exit $ret

