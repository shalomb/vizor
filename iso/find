#!/bin/bash

source defaults.sh
source utils.sh

database='iso'
query_string=
query_terms=()
identity_fields=()
user_query_string=

function show_help {
  echo "$0"
  perl -ne '
      printf "   %s  %s\n", $1, $2 
        if (/getopt/../esac/ and /(\S+)\)\s*([[:alnum:]_]+)/)
      ' "$0"
}

while getopts "d:f:hl:Q:q:" opt; do
  case $opt in
    d) database="$OPTARG"
      ;;
    f) identity_fields+=( ".$OPTARG" )
      ;;
    Q) user_query_string="$OPTARG"
      ;;
    q) query_terms+=( "$OPTARG" )
      ;;
    h) show_help; exit 3;
      ;;
  esac
done

query_string=$( join_array ' AND ' "${query_terms[@]:+${query_terms[@]}}" )

query_string="${query_string:-${user_query_string}}"

[[ -z $query_string ]] && query_string='*'
[[ -z $query_string ]] && die "query_string : $query_string"

echo -n "Querying '$database' for '$query_string' .. " >&2

results=$( curl -s -X GET 'http://localhost:9200/'"$database"'/'"$database"'/_search?search_type=scan&scroll=1s' -d '{
  "query" : {
    "query_string": {
      "query": "('"$query_string"')"
    }
  }
}' ) 

total_hits=$(jq -e -r -S '.hits.total' <<<"$results")

echo "found '$total_hits' documents." >&2

results=$( curl -s -X GET 'http://localhost:9200/'"$database"'/'"$database"'/_search?from=0&size='"$total_hits"'' -d '{
  "query" : {
    "query_string": {
      "query": "('"$query_string"')"
    }
  }
}' ) 

if (( ${#identity_fields[@]} == 1 )); then
  jq -r -c -S '.hits.hits[] | .["_source"] | '"${identity_fields[0]}"'' <<<"$results"
elif (( ${#identity_fields[@]} > 1 )); then
  identity_string=$( join_array ',' "${identity_fields[@]}")
  results=$( jq -r -c -S '.hits.hits[] | .["_source"] | ['"$identity_string"']' <<<"$results" |
        sed -r 's/^\[|\]$//g' )

  if [[ -t 1 ]]; then
    { echo "$identity_string"; echo "$results"; } | csv_to_table
  else
    { echo "$identity_string"; echo "$results"; } 
  fi
else
  jq -r -S '.hits.hits[] | .["_source"]' <<<"$results" #| python -m json.tool
fi

