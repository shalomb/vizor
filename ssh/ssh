#!/bin/bash

shopt -s expand_aliases extglob nullglob

DEBUG="${DEBUG}"
[[ $DEBUG ]] && set -xv

set -eu

DIR=$( cd "${BASH_SOURCE[0]%/*}" && pwd )
SCRIPT="$DIR/${BASH_SOURCE[0]##*/}"

PATH="$PATH:$DIR"

function INIT {
  for d in "$DIR"/*/; do
    export PATH="$PATH:$d"
  done
}


INIT;

source utils.sh


function get_cmd_synopis {
  local file="$1"
  local msg=$( awk 'BEGIN{RS="\n\n"}/SYNOPSIS|synopsis/' "$file" | \
    grep -vi 'synopsis' | sed -r -e 's/^[ \t#]*//' -e 's/\n//g' || true )
  msg="${msg//$'\n'/}"
  echo "$msg"
}

function usage {
  local help_msg=''
  
  if [[ -e "$DIR/help.txt" ]]; then
    help_msg="$(get_cmd_synopis "$DIR/help.txt")"
  fi

  echo ""
  printf "%-12s %s\n" "${0##*/}" "$help_msg"
  echo ""
  echo "Subcommands"
  echo ""

  while read -r -d $'\0' file; do
    cmd="${file##*/}"
    help_msg=
    if [[ -d $file ]]; then
      subcmd="${file##*/}"
      if [[ -e "$file/help.txt" ]]; then
        help_msg="$(get_cmd_synopis "$file/help.txt")"
      elif [[ -e "$file/$subcmd" ]]; then
        help_msg="Use '${0##*/} $cmd' to navigate sub-commands."
      fi
    elif [[ -x $file ]]; then
      help_msg=$( get_cmd_synopis "$file" )
      help_msg="${help_msg:- }"
    fi
    [[ $help_msg ]] && printf "    %-24s %s\n" "$cmd" "$help_msg"
  done < <( \
    find "$DIR" \
      -maxdepth 1 -a ! \( -name "${SCRIPT##*/}" -o -name '.*' \) \
      -print0 | sort -z
    )

  echo
}

if (( $# == 0 )); then
  usage;
  exit 3;
fi

cmd="$DIR/$1"; shift;
args="$@"

if [[ -d $cmd ]]; then
  subcmd="${cmd##*/}"
  if [[ -e "$cmd/$subcmd" ]]; then
    "$cmd/$subcmd" "$@"
  else
    die "$cmd/$subcmd not a valid command."
  fi
elif [[ -x $cmd ]]; then
  "$cmd" "$@"
else
  echo "Command '$cmd' is not a valid executable." >&2
  exit 3;
fi

