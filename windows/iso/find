#!/bin/bash

source defaults.sh
source utils.sh

query_string=
query_terms=()
identity_fields=()
user_query_string=

while getopts "d:f:l:Q:q:" opt; do
  case $opt in
    d) database="$OPTARG"
      ;;
    f) identity_fields+=( ".$OPTARG" )
      ;;
    Q) user_query_string="$OPTARG"
      ;;
    q) query_terms+=( "$OPTARG" )
      ;;
  esac
done

query_string=$( join_array ' AND ' "${query_terms[@]:+${query_terms[@]}}" )

query_string="${query_string:-${user_query_string}}"

[[ -z $query_string ]] && query_string='*'
[[ -z $query_string ]] && die "query_string : $query_string"

results=$( curl -s -X GET 'http://localhost:9200/'"$database"'/'"$database"'/_search?search_type=scan&scroll=1s' -d '{
  "query" : {
    "query_string": {
      "query": "('"$query_string"')"
    }
  }
}' ) 

total_hits=$(jq -r -S '.hits.total' <<<"$results")

results=$( curl -s -X GET 'http://localhost:9200/'"$database"'/'"$database"'/_search?from=0&size='"$total_hits"'' -d '{
  "query" : {
    "query_string": {
      "query": "('"$query_string"')"
    }
  }
  "sort" : [
    { "ctime" : {"order" : "desc"}},
    { "mtime" : {"order" : "desc"}}
  ]
}' ) 

if (( ${#identity_fields[@]} > 0 )); then
  identity_string=$( join_array ',' "${identity_fields[@]}")
  jq -r -S '.hits.hits[] | .["_source"] | '"$identity_string"'' <<<"$results"
else
  jq -r -S '.hits.hits[] | .["_source"]' <<<"$results" #| python -m json.tool
fi

