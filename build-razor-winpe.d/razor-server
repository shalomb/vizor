#!/bin/bash

set -eu
set -xv

pkgs_to_install=()

for pkg in \
    autoconf automake bison build-essential git git-core \
    libarchive13 libarchive-dev postgresql-client gawk \
 ; do
  if ! dpkg -s "$pkg" &> /dev/null; then
    pkgs_to_install+=( "$pkg" )
  fi
done

if (( ${#pkgs_to_install[@]} > 0 )); then
  sudo aptitude install -y --without-recommends "${pkgs_to_install[@]}"
fi

# aptitude install razor-server
# 500 http://apt.puppetlabs.com/ sid/main amd64 Packages

adduser razor --home /var/lib/razor --shell /bin/false --system || true
adduser razor src

# Test Database access
echo "localhost:5432:razor:razor:***REMOVED***" > /var/lib/razor/.pgpass
chmod 0600 /var/lib/razor/.pgpass
sudo -u razor psql -U razor razor -w -l

jrubys=( $(rbenv which jruby) )
if [[ ${jrubys[*]} != *'jruby 1.7.8'* ]]; then
  rbenv install jruby-1.7.8
fi

rbenv rehash && rbenv global jruby-1.7.8

cd /usr/src
[[ -d razor-server ]] || git clone https://github.com/puppetlabs/razor-server.git
cd razor-server
git pull
git checkout 0.15.0

bundle install

[[ -e config.yaml ]] || cp -a config.yaml.sample config.yaml

# Test Razor Ability to create database
# Edit /etc/razor/config.yaml for password auth to postgres databases

# Edit to make changes to the location and authentication 
# for the environment databases.

repo_root=$(awk -F'[: ]+' '/repo_store_root/{print $3}' /usr/src/razor-server/config.yaml)
mkdir -p "$repo_root"

for env in test development production; do
  (set -xv; bin/razor-admin -e "$env" check-migrations || bin/razor-admin -e "$env" migrate-database)
done

# Download razor-microkernel
cd "$repo_root"
wget "http://links.puppetlabs.com/razor-microkernel-latest.tar"
tar xvf razor-microkernel-latest.tar

torquebox deploy --env production

# ensure razor-server isn't already bound to port 4447, 9999, etc
# torquebox run --bind-address 0.0.0.0
# Copy init script in
# Set log rotate policy

exit

