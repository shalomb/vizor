#!/bin/bash

# set -x -v

set -e -u

this_name="${0##*/}"

list_dir=/var/lib/hds/lists/
mkdir -p "$list_dir"

function mount_url {
  local url="$1"
  local type="${url%://*}"
  local username="${url#*://}"
  local hostname="${username#*@}"
  local username="${username%@*}"
  local password="${username#*:}"
  local username="${username%:*}"
  local path="${hostname#*/}"
  local hostname="${hostname%%/*}"

  # echo "type     : $type"       >&2
  # echo "username : $username"   >&2
  # echo "hostname : $hostname"   >&2
  # echo "password : $password"   >&2
  # echo "path     : $path"       >&2

  mp=$(mktemp -d "$this_name.${hostname//[!0-9A-Za-z_.]/}#${path//[!0-9A-Za-z\$_.,]/.}.XXXXXXXX" -t)
  
  if [[ $type = cifs ]]; then
    mount -t "$type" "//$hostname/$path" "$mp" -o "username=${username},password=${password}"
  else
    mount -t "$type" "$hostname:$path"
  fi

  echo "$mp"
}

function namesum {
  local name="$1"
  openssl dgst -sha1 -binary <<<"$name" | openssl base64
  # :base64 < <(md5sum <<<"$name")
}

function scan_iso_dir {
  local iso_dir="$1"
  while read -r file; do
    stat --printf "%Y %n\n" "$file"
  done < <( find "$iso_dir" -maxdepth 5 -iname "*.iso" -type f ) |
    sort -n |  
    while read -r mtime file; do 
      echo "$mtime $(namesum "$file") $file"
    done
}

# Clear old mount points
while read -r mp; do
  umount "$mp"
  rmdir  "$mp"
done < <(awk '$2 ~ /'"$this_name"'/{ print $2 }' /etc/mtab)

# Clear lists
find /var/lib/hds/lists/* -exec rm -fr {} + || true

# Mount every directory, and update lists
echo "Scanning for ISOs"
while read -r type url pathstr; do
  if ! [[ $type = '#'* ]]; then
    read -a paths <<<"$pathstr"
    echo "${url##*@} .. " 
    for path in "${paths[@]}"; do
      # echo "$type" "$url" "$path"
      mp=$(mount_url "$url/$path")
      if [[ $mp ]]; then
        # set -xv
        printf "    %-10s .. " "$path"
        # echo "$path => ${path//\//.}" >&2
        url_t="${url##*@}"
        list="$list_dir"/"${url_t//[!0-9A-Za-z.\-]/.}"."${path//[!0-9A-Za-z\$_\-.,]/.}.list"
        list="${list//\.\./.}"
        scan_iso_dir "$mp" > $list
        c=$(wc -l < $list)
        printf "%3s ISOs.\n" "$c"
        mkdir -pv "$list_dir" 
      else
        echo "Failed to mount '$url/$path'" >&2
      fi
    done
  fi
done < /etc/default/hds_windows_release_dirs
